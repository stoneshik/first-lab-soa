openapi: 3.0.3
info:
  title: Сервис реестра квартир
  description: Сервис реестра квартир, REST эндпоинты для первой лабораторной по СОА
  version: 1.0.0
servers:
  - url: 'http://localhost:335159/api/v1/agency'
paths:
  /find-with-balcony/{priceType}/{balconyType}:
    get:
      summary: Найти квартиру по цене и наличию балкона
      description: Возвращает самую дешевую или самую дорогую квартиру, с балконом или без, в зависимости от параметров
      operationId: findWithBalcony
      parameters:
        - name: priceType
          in: path
          description: >
            Тип поиска:<br>
            - 'cheapest' самая дешевая квартира<br>
            - 'expensive' самая дорогая квартира
          required: true
          schema:
            type: string
            nullable: false
            enum: [cheapest, expensive]
          example: cheapest
        - name: balconyType
          in: path
          description: >
            Тип балкона:<br>
            - 'with-balcony' квартира без балкона<br>
            - 'without-balcony' квартира с балконом
          required: true
          schema:
            type: string
            nullable: false
            enum: [with-balcony, without-balcony]
          example: with-balcony
      tags:
        - Agency
      responses:
        '200':
          description: Успешно возвращена подходящая квартира
          content:
            application/xml:
              schema:
                $ref: 'FlatService.yaml#/components/schemas/FlatAllFieldsSchema'
        '400':
          description: Предоставлен(ы) неверный(е) параметр(ы)
          content:
            applicaiton/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Предоставлен неверный параметр
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '404':
          description: Не найдена подходящая квартира
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Не найдена подходящая квартира
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Внутренняя ошибка сервера
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        default:
          description: Возвращает сообщение об ошибке и время возникновения ошибки
          content:
            application/xml:
              schema:
                $ref: 'FlatService.yaml#/components/schemas/Error'

  /get-ordered-by-time-to-metro/{transportType}/{sortType}:
    get:
      summary: Вернуть список квартир, отсортированных по времени до метро
      description: >
        Возвращает список всех квартир, отсортированных по времени, необходимому для того, чтобы добраться от квартиры до ближайшей станции метро.<br>
        Сортировка может выполняться по времени, проведенному пешком, или по времени, проведенному в пути, в порядке возрастания или убывания.
      operationId: getOrderedByTimeToMetro
      parameters:
        - name: transportType
          in: path
          description: >
            Тип транспорта:<br>
            - 'walking' время пешком<br>
            - 'transport' время на личном/общественном транспорте
          required: true
          schema:
            type: string
            nullable: false
            enum: [walking, transport]
          example: walking
        - name: sortType
          in: path
          description: >
            Тип сортировки:<br>
            - 'asc' в порядке возрастания времени (от более позднего к более раннему времени)<br>
            - 'desc' в порядке убывания времени (от более раннего времени к более позднему)
          required: true
          schema:
            type: string
            nullable: false
            enum: [asc, desc]
          example: asc
        - name: page
          in: query
          required: false
          description: Задаёт номер страницы для пагинации. По умолчанию возвращает первую страницу
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: pageSize
          in: query
          required: false
          description: Задаёт размер страницы для пагинации. По умолчанию размер страницы равен 10
          schema:
            type: integer
            default: 10
            minimum: 1
      tags:
        - Agency
      responses:
        '200':
          description: Успешно получен список квартир, отсортированных по времени до метро
          content:
            application/xml:
              schema:
                $ref: 'FlatService.yaml#/components/schemas/FlatsAllFieldsSchema'
        '400':
          description: Предоставлен(ы) неверный(е) параметр(ы)
          content:
            applicaiton/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Предоставлен неверный параметр
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Внутренняя ошибка сервера
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        default:
          description: Возвращает сообщение об ошибке и время возникновения ошибки
          content:
            application/xml:
              schema:
                $ref: 'FlatService.yaml#/components/schemas/Error'
