openapi: 3.0.3
info:
  title: Flats registry service REST endpoints
  description: Flats registry service REST endpoints for SOA first lab
  version: 1.0.0
servers:
  - url: 'http://localhost:335159/api/v1/'
paths:
  # CRUD operations
  /flats/:
    post:
      summary: Add new flat
      operationId: addFlat
      tags:
        - Registry
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/FlatAllFieldsSchema'
      responses:
        '200':
          description: Successfully add new flat
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/FlatAllFieldsSchema'
        '405':
          description: Validation exception
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  messages:
                    type: array
                    items:
                      type: string
                      example: Flat field area equals or less than 0
                      xml:
                        name: message
                    xml:
                      name: messages
                      wrapped: true
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        default:
          description: Returns error message and time case of error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get list of flats
      description: Get list of flats with sorting and pagination
      operationId: getFlats
      parameters:
        - name: sort
          in: query
          description: >
            Array of fields that are used for sorting.<br>
            The minus sign means sorting in descending order.<br>
            Without minus sign means sorting in ascending order.<br>
            If ascdending and descending order are provided for one field (with and without minus), an error response will be returned
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              default: id
              enum:
                - id
                - name
                - coordinates.x
                - coordinates.y
                - creationDate
                - area
                - numberOfRooms
                - height
                - view
                - transport
                - house.name
                - house.year
                - house.numberOfFlatsOnFloor
                - -id
                - -name
                - -coordinates.x
                - -coordinates.y
                - -creationDate
                - -area
                - -numberOfRooms
                - -height
                - -view
                - -transport
                - -house.name
                - -house.year
                - -house.numberOfFlatsOnFloor
        - name: filter
          in: query
          required: false
          description: >
            Field filter list.<br>
            Format (except interval and range): `field[operation]:value`.<br>
            Format for interval and range: `field[operation]:min,max`<br>
            Available operations:<br>
            - `eq` - equals<br>
            - `ne` - not equals<br>
            - `gt` - greater than (strict)<br>
            - `lt` - less than (strict)<br>
            - `gte` - greater or equal<br>
            - `lte` - less or equal<br>
            - `interval` - open interval `(min, max)`<br>
            - `range` - closed range `[min, max]`<br>
            Examples:<br>
            - `area[gt]:10` — area > 10<br>
            - `area[interval]:10,20` - 10 < area < 20<br>
            - `numberOfRooms[range]:1,3` - 1 ≤ rooms ≤ 3<br>
            If operation is `interval` or `range`, value **must** contain 2 numbers separated by comma.<br>
            Otherwise — one value. Incorrect value returns 400.
          style: deepObject
          explode: true
          schema:
            type: array
            items:
              type: string
              example: area[interval]:10,20
              pattern: '^(?:(?:id|name|coordinates\.x|coordinates\.y|creationDate|area|numberOfRooms|height|view|transport|house\.name|house\.year|house\.numberOfFlatsOnFloor)\[(?:eq|ne|gt|lt|lte|gte)\]:[^,]+|(?:id|name|coordinates\.x|coordinates\.y|creationDate|area|numberOfRooms|height|view|transport|house\.name|house\.year|house\.numberOfFlatsOnFloor)\[(?:interval|range)\]:[^,]+,[^,]+)$'
        - name: page
          in: query
          required: false
          description: Page number for pagination. Default is 0
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: page
          in: query
          required: false
          description: Specifies page number for pagination. By default returns first page
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: pageSize
          in: query
          required: false
          description: Specifies page size for pagination. By default page size will be 10
          schema:
            type: integer
            default: 10
            minimum: 1
      tags:
        - Registry
      responses:
        '200':
          description: Successfully returns an array of flats based on passed parameters
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/FlatsAllFieldsSchema'
        '400':
          description: Invalid param(s) supplied
          content:
            applicaiton/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Invalid param(s) supplied
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        default:
          description: Returns error message and time case of error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
    # Additional operation
    delete:
      summary: Delete one flat by filter
      description: >
        Deletes one (any) Flat object that matches the specified criteria.<br>
        If multiple matching records are found, the first matching record is deleted.
      operationId: deleteOneFlatByFilter
      parameters:
        - name: houseName
          in: query
          description: House.name value filter for delete flat
          required: false
          schema:
            type: string
            nullable: false
            minLength: 1
            example: First House
        - name: houseYear
          in: query
          description: House.year value filter for delete flat
          required: false
          schema:
            type: integer
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 2000
        - name: numberOfFlatsOnFloor
          in: query
          description: House.numberOfFlatsOnFloor value filter for delete flat
          required: false
          schema:
            type: integer
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 9
      tags:
        - Registry
      responses:
        '204':
          description: Flat was successfully deleted
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Flat was successfully deleted
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '404':
          description: Not found flat by filter param error
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Not found flat by filter param error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        default:
          description: Returns error message and time case of error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

  # CRUD operations by id
  /flats/{id}:
    get:
      summary: Get existing flat by id
      description: Get existing flat by id
      operationId: getFlat
      parameters:
        - name: id
          in: path
          description: Flat id for find
          required: true
          schema:
            type: integer
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Registry
      responses:
        '200':
          description: Successfully returns flat by id
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/FlatAllFieldsSchema'
        '400':
          description: Invalid param supplied
          content:
            applicaiton/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Invalid param supplied
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '404':
          description: Not found flat by param id error
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Not found flat by id error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        default:
          description: Returns error message and time case of error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update existing flat by id
      description: Update existing flat by id
      operationId: updateFlat
      parameters:
        - name: id
          in: path
          description: Flat id to update
          required: true
          schema:
            type: integer
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Registry
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/FlatAllFieldsSchema'
      responses:
        '200':
          description: Successfully returns an updated flat
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/FlatAllFieldsSchema'
        '405':
          description: Validation exception
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  messages:
                    type: array
                    items:
                      type: string
                      example: Flat field area equals or less than 0
                      xml:
                        name: message
                    xml:
                      name: messages
                      wrapped: true
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '500':
          description: Internal server error
          content:
            application/xmll:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        default:
          description: Returns error message and time case of error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete existing flat by id
      description: Delete existing flat by id
      operationId: deleteFlat
      parameters:
        - name: id
          in: path
          description: Flat id for delete
          required: true
          schema:
            type: integer
            nullable: false
            minimum: 0
            exclusiveMinimum: true
      tags:
        - Registry
      responses:
        '204':
          description: Flat was successfully deleted
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Flat was sussesfully deleted
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '404':
          description: Not found flat by param id error
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Not found flat by id error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        default:
          description: Returns error message and time case of error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

  # Additional operations
  /lab-works/amount/height:
    get:
      summary: Get amount of fields "height" for all flat objects
      description: Get amount of fields "height" for all flat objects
      operationId: getAmountOfFieldsHeight
      tags:
        - Registry
      responses:
        '200':
          description: Successfully returns amount of fields "height" for all flat objects
          content:
            application/xml:
              schema:
                type: integer
                xml:
                  name: Response
                format: int64
                nullable: false
                minimum: 0
                example: 123
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        default:
          description: Returns error message and time case of error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

  /flats/group-by/height:
    get:
      summary: Group flats by height
      description: Group flats by height
      operationId: groupByHeight
      tags:
        - Registry
      responses:
        '200':
          description: Successfully returns group flats by height
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: groups
                properties:
                  group:
                    type: array
                    items:
                      type: object
                      properties:
                        height:
                          type: integer
                          nullable: false
                          description: Flat floor number
                          minimum: 0
                          exclusiveMinimum: true
                          example: 10
                        count:
                          type: integer
                          nullable: false
                          description: Number of flats with this height
                          minimum: 0
                          exclusiveMinimum: true
                          example: 8
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: Error
                properties:
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2024-11-10T00:10:12Z
        default:
          description: Returns error message and time case of error
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Error"

# Schemas of objects
components:
  schemas:
    FlatAllFieldsSchema:
      type: object
      xml:
        name: Flat
      properties:
        id:
          type: integer
          nullable: false
          minimum: 0
          exclusiveMinimum: true
          example: 1
          description: Unique identifier for flat, generate automatically
          readOnly: true
        name:
          type: string
          nullable: false
          minLength: 1
          example: First Flat
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
          nullable: false
          example: 2024-11-10
          description: Date and time of creation object, generate automatically
          readOnly: true
        area:
          type: integer
          nullable: true
          minimum: 0
          exclusiveMinimum: true
          example: 1
        numberOfRooms:
          type: integer
          nullable: false
          minimum: 0
          exclusiveMinimum: true
          example: 1
        height:
          type: integer
          nullable: false
          minimum: 0
          exclusiveMinimum: true
          example: 10
          description: Flat floor number
        view:
          $ref: '#/components/schemas/View'
        transport:
          $ref: '#/components/schemas/Transport'
        house:
          $ref: '#/components/schemas/House'
      required:
        - name
        - coordinates
        - numberOfRooms
        - height
        - house

    FlatsAllFieldsSchema:
      type: object
      xml:
        name: FlatsPage
      properties:
        flats:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/FlatAllFieldsSchema'
          xml:
            name: flats
            wrapped: true
        page:
          type: integer
          nullable: false
          minimum: 0
          default: 0
        pageSize:
          type: integer
          nullable: false
          minimum: 0
          default: 20
        totalPages:
          type: integer
          nullable: false
          minimum: 0
          default: 1
        totalAmount:
          type: integer
          nullable: false
          minimum: 0
          default: 0
          example: 1
      required:
        - flats
        - page
        - pageSize
        - totalPages
        - totalAmount

    Coordinates:
      type: object
      nullable: false
      properties:
        x:
          type: number
          format: float
          nullable: false
          minimum: -993
          exclusiveMinimum: true
          example: 1.1
        y:
          type: number
          format: int64
          nullable: false
          example: 123
      required:
        - x
        - y

    House:
      type: object
      nullable: false
      properties:
        name:
          type: string
          nullable: false
          example: First House
        year:
          type: integer
          nullable: true
          minimum: 0
          exclusiveMinimum: true
          example: 2000
        numberOfFlatsOnFloor:
          type: integer
          nullable: true
          minimum: 0
          exclusiveMinimum: true
          example: 9
      required:
        - name

    View:
      type: string
      nullable: true
      example: STREET
      enum:
        - STREET
        - YARD
        - BAD
        - GOOD

    Transport:
      type: string
      nullable: true
      example: FEW
      enum:
        - FEW
        - NONE
        - LITTLE
        - NORMAL
        - ENOUGH

    Error:
      type: object
      properties:
        message:
          type: string
          example: Not Found
        time:
          type: string
          format: date-time
          example: 2024-11-10T00:10:12Z
      required:
        - message
        - time
